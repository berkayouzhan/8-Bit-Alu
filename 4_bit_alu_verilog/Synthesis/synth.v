/* Generated by Yosys 0.9 (git sha1 UNKNOWN, clang 3.4.2 -fPIC -Os) */

(* src = "design.sv:3" *)
module ALU(operandA, operandB, operation, result, zeroFlag);
  (* src = "design.sv:13" *)
  wire [7:0] _00_;
  (* src = "design.sv:15" *)
  wire [7:0] _01_;
  (* src = "design.sv:21" *)
  wire _02_;
  (* src = "design.sv:17" *)
  wire [7:0] _03_;
  (* src = "design.sv:16" *)
  wire [7:0] _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "design.sv:14" *)
  wire [7:0] _10_;
  (* src = "design.sv:21" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _11_;
  (* src = "design.sv:4" *)
  input [3:0] operandA;
  (* src = "design.sv:5" *)
  input [3:0] operandB;
  (* src = "design.sv:6" *)
  input [2:0] operation;
  (* src = "design.sv:7" *)
  output [7:0] result;
  (* src = "design.sv:8" *)
  output zeroFlag;
  assign _00_ = operandA + (* src = "design.sv:13" *) operandB;
  assign _01_ = operandA & (* src = "design.sv:15" *) operandB;
  assign _02_ = ! (* src = "design.sv:21" *) result;
  assign _03_ = operandA * (* src = "design.sv:17" *) operandB;
  assign _04_ = operandA | (* src = "design.sv:16" *) operandB;
  function [7:0] _17_;
    input [7:0] a;
    input [39:0] b;
    input [4:0] s;
    (* full_case = 32'd1 *)
    (* src = "design.sv:17|design.sv:12" *)
    (* parallel_case *)
    casez (s)
      5'b????1:
        _17_ = b[7:0];
      5'b???1?:
        _17_ = b[15:8];
      5'b??1??:
        _17_ = b[23:16];
      5'b?1???:
        _17_ = b[31:24];
      5'b1????:
        _17_ = b[39:32];
      default:
        _17_ = a;
    endcase
  endfunction
  assign result = _17_(8'h00, { _00_, _10_, _01_, _04_, _03_ }, { _09_, _08_, _07_, _06_, _05_ });
  assign _05_ = operation == (* full_case = 32'd1 *) (* src = "design.sv:17|design.sv:12" *) 3'h4;
  assign _06_ = operation == (* full_case = 32'd1 *) (* src = "design.sv:16|design.sv:12" *) 3'h3;
  assign _07_ = operation == (* full_case = 32'd1 *) (* src = "design.sv:15|design.sv:12" *) 3'h2;
  assign _08_ = operation == (* full_case = 32'd1 *) (* src = "design.sv:14|design.sv:12" *) 3'h1;
  assign _09_ = ! (* full_case = 32'd1 *) (* src = "design.sv:13|design.sv:12" *) operation;
  assign _10_ = operandA - (* src = "design.sv:14" *) operandB;
  assign { _11_[31:1], zeroFlag } = _02_ ? (* src = "design.sv:21" *) 32'd1 : 32'd0;
  assign _11_[0] = zeroFlag;
endmodule
